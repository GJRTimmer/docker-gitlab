#!/usr/bin/env bash
set -e
set -o pipefail

source "${GITLAB_RUNTIME_DIR}/functions"

[[ $DEBUG == true ]] && set -x

case ${1} in
  configure)
    # Container Configuration
    ${GITLAB_RUNTIME_DIR}/configure
  ;;
  app:init|app:start|app:sanitize|app:rake)

    # Run user init overrides (pre)
    if [ -d "${GITLAB_RUNTIME_DIR}/init.pre.d" ]; then
      echo "Loading user init overrides (pre)"
      for f in $(find ${GITLAB_RUNTIME_DIR}/init.pre.d/ -type f); do
        chmod +x ${f} || # Set execute bit in case user forgot it, continue if fails
        echo "Loading ${f}"
        source ${f} || continue # Continue on error
      done
    fi

    initialize_system
    configure_gitlab
    configure_gitlab_shell
    configure_gitlab_pages
    configure_nginx

    # Run user init overrides (post)
    if [ -d "${GITLAB_RUNTIME_DIR}/init.post.d" ]; then
      echo "Loading user init overrides (post)"
      for f in $(find ${GITLAB_RUNTIME_DIR}/init.post.d/ -type f); do
        echo "Loading ${f}"
        chmod +x ${f} || continue # Set execute bit in case user forgot it, continue if fails
        source ${f} || continue # Continue on error
      done
    fi

    case ${1} in
      app:start)
        /usr/bin/supervisord -nc /etc/supervisor/supervisord.conf &
        SUPERVISOR_PID=$!
        migrate_database
        kill -15 $SUPERVISOR_PID
        if ps h -p $SUPERVISOR_PID > /dev/null ; then
        wait $SUPERVISOR_PID || true
        fi
        rm -rf /var/run/supervisor.sock
        exec /usr/bin/supervisord -nc /etc/supervisor/supervisord.conf
        ;;
      app:init)
        migrate_database
        ;;
      app:sanitize)
        sanitize_datadir
        ;;
      app:rake)
        shift 1
        execute_raketask "$@"
        ;;
    esac
    ;;
  app:help)
    echo "Available options:"
    echo " app:start        - Starts the gitlab server (default)"
    echo " app:init         - Initialize the gitlab server (e.g. create databases, compile assets), but don't start it."
    echo " app:sanitize     - Fix repository/builds directory permissions."
    echo " app:rake <task>  - Execute a rake task."
    echo " app:help         - Displays the help"
    echo " [command]        - Execute the specified command, eg. bash."
    ;;
  *)
    exec "$@"
    ;;
esac
